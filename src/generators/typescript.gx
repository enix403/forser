#prelude
type Optional<T> = T | null;
#end/prelude

// --------------------------------------------------------------
// --------------------------------------------------------------

#types

string { string }
int { number }
float { float }
bool { boolean }
array { Array<%T%> }
map { Record<string, %T%> }
tuple { [%Ts/, /-/i%] }
null { Optional<%T%> }
struct { %T% }

#end/types

// -------------------------------------------------------------- 
// -------------------------------------------------------------- 

#field_visitor
%name%: %ty%;
#end/field_visitor

// -------------------------------------------------------------- 
// -------------------------------------------------------------- 

#message_struct
export interface %name% {
  %fields%
}
#end/message_struct

// -------------------------------------------------------------- 
// -------------------------------------------------------------- 

#enum_variant_visitor
%name% = %val%
#end/enum_variant_visitor

// -------------------------------------------------------------- 
// -------------------------------------------------------------- 

#message_enum
export enum %name% {
  %variants/,%
}

#end/message_enum


