#prelude
from __future__ import annotations
from enum import Enum
from typing import (
    Literal,
    Optional,
    cast,
    Type,
    TypeVar,
    Union,
    Dict,
    Any,
    List
)

from dataclasses import dataclass

class StructMessage:
    pass

#end/prelude

// -------------------------------------------------------------- 
// -------------------------------------------------------------- 

#types

string { str }
int { int }
float { float }
bool { bool }
array { List[%T%] }
null { Optional[%T%] }
struct { %T% }

#end/types

// -------------------------------------------------------------- 
// -------------------------------------------------------------- 

#field_visitor
%name%: %ty%
#end/field_visitor

// -------------------------------------------------------------- 
// -------------------------------------------------------------- 

#message_struct

@dataclass
class %name%(StructMessage):
    %fields%

#end/message_struct

// -------------------------------------------------------------- 
// -------------------------------------------------------------- 

#enum_variant_visitor
%name% = %val%
#end/enum_variant_visitor

// -------------------------------------------------------------- 
// -------------------------------------------------------------- 

#message_enum

class %name%(Enum):
    %variants%

#end/message_enum
